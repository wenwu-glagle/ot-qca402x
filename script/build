#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

# ==============================================================================
# Bash definitions
if [[ -n ${BASH_SOURCE[0]} ]]; then
    script_path="${BASH_SOURCE[0]}"
else
    script_path="$0"
fi

script_dir="$(dirname "$(realpath "$script_path")")"
repo_dir="$(dirname "$script_dir")"
board="CDB4024"
platform="qca4024"

source "$script_dir/qca-definitions"


# ==============================================================================
OT_CMAKE_NINJA_TARGET=${OT_CMAKE_NINJA_TARGET:-}

readonly OT_OPTIONS=(
    "-DCMAKE_BUILD_TYPE=Release"
    "-DOT_DIAGNOSTIC=ON"
    "-DOT_EXTERNAL_HEAP=ON"
    "-DOT_SLAAC=ON"
)

die()
{
    echo " ** ERROR: $1"
    exit 1
}

build()
{
    builddir="${OT_CMAKE_BUILD_DIR:-$repo_dir/build/${board}}"

    mkdir -p "${builddir}"
    cd "${builddir}"

    cmake -GNinja -DOT_COMPILE_WARNING_AS_ERROR=OFF "$@" "${repo_dir}"

    if [[ -n ${OT_CMAKE_NINJA_TARGET[*]} ]]; then
        ninja "${OT_CMAKE_NINJA_TARGET[@]}"
    else
        ninja
    fi

    cd "${repo_dir}"
}


main()
{
    local usage="usage: $0 [-h] [-D<OT_XXXX=ON> -D<OT_YYYY=OFF>]"

    qca_check_platform "${platform}" || die "Unsupported platform ${platform}"

    local options=("${OT_OPTIONS[@]}")

    options+=("-DCMAKE_TOOLCHAIN_FILE=src/${platform}/toolchain.cmake")

    case "${platform}" in

        qca4024)
            OT_CMAKE_NINJA_TARGET=()
            ;;
    esac

    options+=("$@")
    build "${options[@]}"
}

main "$@"
